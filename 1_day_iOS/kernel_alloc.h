//
//  kernel_alloc.h
//  1_day_iOS
//
//  Created by System on 25/11/2020.
//  Copyright Â© 2020 System. All rights reserved.
//

#ifndef kernel_alloc_h
#define kernel_alloc_h

#include <stdio.h>
#include <stdlib.h>
#include <mach/mach.h>
#include <assert.h>
#endif /* kernel_alloc_h */

#define max_ool_ports_per_message 16382
#define max_ool_memory_per_message  2 * 1024 * 1024
#define min(a, b) ((a) < (b) ? (a) : (b))


struct ool_ports_msg
{
    mach_msg_header_t header;
    mach_msg_body_t body;
    mach_msg_ool_ports_descriptor_t ool_ports[0];
};




size_t message_size_for_kalloc_size(size_t );

size_t
ool_ports_spray_size(mach_port_t *, size_t *,
                     size_t , const mach_port_t *, size_t ,
                     mach_msg_type_name_t , size_t );
size_t
ool_ports_spray_port(mach_port_t ,
                     const mach_port_t *, size_t ,
                     mach_msg_type_name_t , size_t ,
                     size_t , size_t );
void port_drain_messages(mach_port_t , void (^)(mach_msg_header_t *));

void ool_ports_spray_receive(mach_port_t *, size_t , mach_port_t *,
                             void (^)(mach_port_t *, size_t,mach_port_t * ));

int kernel_read(uint64_t address, void *data, size_t size , mach_port_t);

extern
kern_return_t mach_vm_read_overwrite
(
 vm_map_t target_task,
 mach_vm_address_t address,
 mach_vm_size_t size,
 mach_vm_address_t data,
 mach_vm_size_t *outsize
 );
